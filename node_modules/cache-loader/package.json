{
  "_args": [
    [
      {
        "raw": "cache-loader@^2.0.1",
        "scope": null,
        "escapedName": "cache-loader",
        "name": "cache-loader",
        "rawSpec": "^2.0.1",
        "spec": ">=2.0.1 <3.0.0",
        "type": "range"
      },
      "C:\\xampp\\htdocs\\vue_food\\node_modules\\@vue\\cli-service"
    ]
  ],
  "_from": "cache-loader@^2.0.1",
  "_hasShrinkwrap": false,
  "_id": "cache-loader@2.0.1",
  "_location": "/cache-loader",
  "_nodeVersion": "10.15.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/cache-loader_2.0.1_1546629925340_0.08328225419674706"
  },
  "_npmUser": {
    "name": "evilebottnawi",
    "email": "sheo13666q@gmail.com"
  },
  "_npmVersion": "6.5.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "cache-loader@^2.0.1",
    "scope": null,
    "escapedName": "cache-loader",
    "name": "cache-loader",
    "rawSpec": "^2.0.1",
    "spec": ">=2.0.1 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@vue/cli-service"
  ],
  "_resolved": "https://registry.npmjs.org/cache-loader/-/cache-loader-2.0.1.tgz",
  "_shasum": "5758f41a62d7c23941e3c3c7016e6faeb03acb07",
  "_shrinkwrap": null,
  "_spec": "cache-loader@^2.0.1",
  "_where": "C:\\xampp\\htdocs\\vue_food\\node_modules\\@vue\\cli-service",
  "author": {
    "name": "Tobias Koppers @sokra"
  },
  "babel": {
    "presets": [
      [
        "@babel/preset-env",
        {
          "targets": {
            "node": "6.9.0"
          },
          "useBuiltIns": "usage"
        }
      ]
    ]
  },
  "bugs": {
    "url": "https://github.com/webpack-contrib/cache-loader/issues"
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "dependencies": {
    "loader-utils": "^1.1.0",
    "mkdirp": "^0.5.1",
    "neo-async": "^2.6.0",
    "normalize-path": "^3.0.0",
    "schema-utils": "^1.0.0"
  },
  "description": "Caches the result of following loaders on disk.",
  "devDependencies": {
    "@babel/cli": "^7.2.3",
    "@babel/core": "^7.2.2",
    "@babel/polyfill": "^7.2.3",
    "@babel/preset-env": "^7.2.3",
    "@commitlint/cli": "^7.2.1",
    "@commitlint/config-conventional": "^7.1.2",
    "@webpack-contrib/defaults": "^3.0.5",
    "@webpack-contrib/eslint-config-webpack": "^3.0.0",
    "babel-core": "^7.0.0-bridge.0",
    "babel-jest": "^23.6.0",
    "babel-loader": "^8.0.4",
    "cross-env": "^5.0.0",
    "del": "^3.0.0",
    "del-cli": "^1.0.0",
    "eslint": "^5.10.0",
    "eslint-config-webpack": "^1.0.0",
    "eslint-plugin-import": "^2.0.0",
    "eslint-plugin-prettier": "^3.0.0",
    "husky": "^1.2.1",
    "jest": "^23.6.0",
    "lint-staged": "^8.1.0",
    "memory-fs": "^0.4.1",
    "pre-commit": "^1.0.0",
    "prettier": "^1.15.2",
    "standard-version": "^4.0.0",
    "webpack": "^4.27.1",
    "webpack-cli": "^3.1.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-V99T3FOynmGx26Zom+JrVBytLBsmUCzVG2/4NnUKgvXN4bEV42R1ERl1IyiH/cvFIDA1Ytq2lPZ9tXDSahcQpQ==",
    "shasum": "5758f41a62d7c23941e3c3c7016e6faeb03acb07",
    "tarball": "https://registry.npmjs.org/cache-loader/-/cache-loader-2.0.1.tgz",
    "fileCount": 7,
    "unpackedSize": 21269,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcL7MlCRA9TVsSAnZWagAAOHMP/AnXCmDMY1N79IGcvzfm\nY7bRwpg9FNK9QbSn0ciM0rcZ/i1L7D99PHM9G8YN1P7UwyUwGuOfRbPo7m7g\nip5lXzrV7wWu9UhXf1ZUKQf1FrFZMxKmg8U3BqL8HDwpCna3yWwkrbRwvpsr\nA2lWeiIDET59+uxeugXEaY7qQE84x275DW4EVA3GeLdinRau4QanT7isavr+\n+TMYi64kAryI9o4I4eof3Wkr905ouOMu7NQAIG5fBTbDXYwe6mxFX7tOu3Uv\nIAYo4v6CC9YOzyvH3XM0811w7JKuI2wxeRifjWjXVk7l1qBXJT9gYITMHzC3\nvEY0uKiHDoJVBN3ivbcuSfIZ9gyH/ny+DgsPrCOCBNGTWA9wW1skVQsOVLzm\nqf29QDdRok3S7kvUnnNaglHZJtXi5PG156EonXP1QEITZZdgKZ29lxQ3xw4C\nJm3AjNagd3bZk/zzOojfYtsEvIuWknvDljK9zvttJC+S0/hl2auCQMlSG7s6\nqe/49YPrcQR5rZA85EI/EQCCLL/bSDAG9A48a3ecKAGUG3AIfqwnoxLE2Omp\nqyq6qwqC3cQvtvyl+Sj4/P+3Uq87xxdIoTPsP4nUR0HRtO7Nod5YzdKiZssV\n7YUY6kjvfT05527+MF9u5UjOWbxTAKYrgixsdUWpXXAYEcZea4Kme9PQ5wZd\nDQxu\r\n=yayW\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 6.9.0"
  },
  "files": [
    "dist"
  ],
  "gitHead": "4cb02e92446263a5e1c61ca283f8961aa42a9833",
  "homepage": "https://github.com/webpack-contrib/cache-loader",
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "keywords": [
    "webpack"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.js": [
      "eslint --fix",
      "git add"
    ]
  },
  "main": "dist/cjs.js",
  "maintainers": [
    {
      "name": "bebraw",
      "email": "bebraw@gmail.com"
    },
    {
      "name": "d3viant0ne",
      "email": "wiens.joshua@gmail.com"
    },
    {
      "name": "evilebottnawi",
      "email": "sheo13666q@gmail.com"
    },
    {
      "name": "jhnns",
      "email": "mail@johannesewald.de"
    },
    {
      "name": "jtangelder",
      "email": "j.tangelder@gmail.com"
    },
    {
      "name": "michael-ciniawsky",
      "email": "michael.ciniawsky@gmail.com"
    },
    {
      "name": "shellscape",
      "email": "andrew@shellscape.org"
    },
    {
      "name": "sokra",
      "email": "tobias.koppers@googlemail.com"
    },
    {
      "name": "thelarkinn",
      "email": "sean.larkin@cuw.edu"
    }
  ],
  "name": "cache-loader",
  "optionalDependencies": {},
  "peerDependencies": {
    "webpack": "^4.0.0"
  },
  "readme": "<div align=\"center\">\n  <a href=\"https://webpack.js.org/\">\n    <img width=\"200\" height=\"200\" src=\"https://cdn.rawgit.com/webpack/media/e7485eb2/logo/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![test][test]][test-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# cache-loader\n\nThe `cache-loader` allow to Caches the result of following loaders on disk (default) or in the database.\n\n## Getting Started\n\nTo begin, you'll need to install `cache-loader`:\n\n```console\nnpm install --save-dev cache-loader\n```\n\nAdd this loader in front of other (expensive) loaders to cache the result on disk.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.ext$/,\n        use: ['cache-loader', ...loaders],\n        include: path.resolve('src'),\n      },\n    ],\n  },\n};\n```\n\n> ⚠️ Note that there is an overhead for saving the reading and saving the cache file, so only use this loader to cache expensive loaders.\n\n## Options\n\n|         Name          |                       Type                       |                     Default                     | Description                                                                                                                                                            |\n| :-------------------: | :----------------------------------------------: | :---------------------------------------------: | :--------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n|  **`cacheContext`**   |                    `{String}`                    |                   `undefined`                   | Allows you to override the default cache context in order to generate the cache relatively to a path. By default it will use absolute paths                            |\n|    **`cacheKey`**     |    `{Function(options, request) -> {String}}`    |                   `undefined`                   | Allows you to override default cache key generator                                                                                                                     |\n| **`cacheDirectory`**  |                    `{String}`                    |         `path.resolve('.cache-loader')`         | Provide a cache directory where cache items should be stored (used for default read/write implementation)                                                              |\n| **`cacheIdentifier`** |                    `{String}`                    | `cache-loader:{version} {process.env.NODE_ENV}` | Provide an invalidation identifier which is used to generate the hashes. You can use it for extra dependencies of loaders (used for default read/write implementation) |\n|      **`write`**      | `{Function(cacheKey, data, callback) -> {void}}` |                   `undefined`                   | Allows you to override default write cache data to file (e.g. Redis, memcached)                                                                                        |\n|      **`read`**       |    `{Function(cacheKey, callback) -> {void}}`    |                   `undefined`                   | Allows you to override default read cache data from file                                                                                                               |\n\n## Examples\n\n### Basic\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        use: ['cache-loader', 'babel-loader'],\n        include: path.resolve('src'),\n      },\n    ],\n  },\n};\n```\n\n### Database Integration\n\n**webpack.config.js**\n\n```js\n// Or different database client - memcached, mongodb, ...\nconst redis = require('redis');\nconst crypto = require('crypto');\n\n// ...\n// connect to client\n// ...\n\nconst BUILD_CACHE_TIMEOUT = 24 * 3600; // 1 day\n\nfunction digest(str) {\n  return crypto\n    .createHash('md5')\n    .update(str)\n    .digest('hex');\n}\n\n// Generate own cache key\nfunction cacheKey(options, request) {\n  return `build:cache:${digest(request)}`;\n}\n\n// Read data from database and parse them\nfunction read(key, callback) {\n  client.get(key, (err, result) => {\n    if (err) {\n      return callback(err);\n    }\n\n    if (!result) {\n      return callback(new Error(`Key ${key} not found`));\n    }\n\n    try {\n      let data = JSON.parse(result);\n      callback(null, data);\n    } catch (e) {\n      callback(e);\n    }\n  });\n}\n\n// Write data to database under cacheKey\nfunction write(key, data, callback) {\n  client.set(key, JSON.stringify(data), 'EX', BUILD_CACHE_TIMEOUT, callback);\n}\n\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        use: [\n          {\n            loader: 'cache-loader',\n            options: {\n              cacheKey,\n              read,\n              write,\n            },\n          },\n          'babel-loader',\n        ],\n        include: path.resolve('src'),\n      },\n    ],\n  },\n};\n```\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/cache-loader.svg\n[npm-url]: https://npmjs.com/package/cache-loader\n[node]: https://img.shields.io/node/v/cache-loader.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/cache-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/cache-loader\n[tests]: https://img.shields.io/circleci/project/github/webpack-contrib/cache-loader.svg\n[tests-url]: https://circleci.com/gh/webpack-contrib/cache-loader\n[cover]: https://codecov.io/gh/webpack-contrib/cache-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/cache-loader\n[chat]: https://badges.gitter.im/webpack/webpack.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=cache-loader\n[size-url]: https://packagephobia.now.sh/result?p=cache-loader\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/webpack-contrib/cache-loader.git"
  },
  "scripts": {
    "build": "cross-env NODE_ENV=production babel src -d dist --ignore 'src/**/*.test.js' --copy-files",
    "ci:coverage": "npm run test:coverage -- --runInBand",
    "ci:lint": "npm run lint && npm run security",
    "ci:lint:commits": "commitlint --from=origin/master --to=${CIRCLE_SHA1}",
    "ci:test": "npm run test -- --runInBand",
    "clean": "del-cli dist",
    "commitlint": "commitlint",
    "commitmsg": "commitlint -e $GIT_PARAMS",
    "defaults": "webpack-defaults",
    "lint": "eslint --cache src test",
    "prebuild": "npm run clean",
    "prepublish": "npm run build",
    "release": "standard-version",
    "security": "npm audit",
    "start": "npm run build -- -w",
    "test": "jest",
    "test:coverage": "jest --collectCoverageFrom='src/**/*.js' --coverage",
    "test:watch": "jest --watch"
  },
  "version": "2.0.1"
}
