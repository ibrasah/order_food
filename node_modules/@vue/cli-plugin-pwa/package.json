{
  "_args": [
    [
      {
        "raw": "@vue/cli-plugin-pwa@^3.4.0",
        "scope": "@vue",
        "escapedName": "@vue%2fcli-plugin-pwa",
        "name": "@vue/cli-plugin-pwa",
        "rawSpec": "^3.4.0",
        "spec": ">=3.4.0 <4.0.0",
        "type": "range"
      },
      "C:\\xampp\\htdocs\\vue_food"
    ]
  ],
  "_from": "@vue/cli-plugin-pwa@^3.4.0",
  "_hasShrinkwrap": false,
  "_id": "@vue/cli-plugin-pwa@3.12.1",
  "_location": "/@vue/cli-plugin-pwa",
  "_nodeVersion": "10.16.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/cli-plugin-pwa_3.12.1_1571387889913_0.9416028295795678"
  },
  "_npmUser": {
    "name": "soda",
    "email": "haoqunjiang+npm@gmail.com"
  },
  "_npmVersion": "6.12.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@vue/cli-plugin-pwa@^3.4.0",
    "scope": "@vue",
    "escapedName": "@vue%2fcli-plugin-pwa",
    "name": "@vue/cli-plugin-pwa",
    "rawSpec": "^3.4.0",
    "spec": ">=3.4.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/@vue/cli-plugin-pwa/-/cli-plugin-pwa-3.12.1.tgz",
  "_shasum": "03c9978b640a3cbce02b7922103a131a88063f31",
  "_shrinkwrap": null,
  "_spec": "@vue/cli-plugin-pwa@^3.4.0",
  "_where": "C:\\xampp\\htdocs\\vue_food",
  "author": {
    "name": "Evan You"
  },
  "bugs": {
    "url": "https://github.com/vuejs/vue-cli/issues"
  },
  "dependencies": {
    "@vue/cli-shared-utils": "^3.12.1",
    "webpack": "^4.0.0",
    "workbox-webpack-plugin": "^3.6.3"
  },
  "description": "pwa plugin for vue-cli",
  "devDependencies": {
    "register-service-worker": "^1.6.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-ver9mJ1t4gqXeB4CmTAYYqnqx8zDzo6ORwWK+iMTvNI2aOrJReh7QTdtWpQbkqHSzN4jNUtYSLIsP/ONdrQOhw==",
    "shasum": "03c9978b640a3cbce02b7922103a131a88063f31",
    "tarball": "https://registry.npmjs.org/@vue/cli-plugin-pwa/-/cli-plugin-pwa-3.12.1.tgz",
    "fileCount": 26,
    "unpackedSize": 105558,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdqXnyCRA9TVsSAnZWagAAeXYP/jqgyZTjJ3wquzmPcFI1\ndwku8z9ZYhBZcWJpqqybZ1swXfGykP1QyGcmjR3pjtypUCIuaKg2ocMhhhBi\nh/NuqRGp5SRddeLOkqRCvrRT+Nt8pReFX+f2cl2aQDOJj2GR4dbiI2rNaBR0\nXDS888NHV9MfR4NVdVIXg4zAr5WJdyJeaGSpplcjA1nn+1ATc+uKwQnvjWVz\nVNQgU5AHTBjiaDb0ulotXHszRt3bG60uFkQrm15mbm7wns5dVYImKWQiufUm\nC6q+ZtqEWwEEozhLIc2IG6jqcALeVNBynYchhO4dRF5kI0+mq038puNuml0Z\nUpf9ESx8mrhB422nKp/QRV9xUULrDq4z3ha3OqZrxES8Oq3/dsIPeAMux/0g\nGQswkEWaiMaWxJlbDH5nPftFZtiGrLgObXORE9pV1F8V0MSt/ijPjCh4c0Ru\nr89pv9ERhj9hsOXYbkMGdb+XGRzUPAQbNnoErIcLFEJi5t+UW+LzZdtqnFUr\nEe2YmCywgsWuans7ykWr83FItyy1di6RBDcdZDFYl67qemxqEadXaCwt23gn\nVrp2hvnzQH6+hA9SfMGky9+WemDC9BlYWxigsLTGXIFjLu+VhPPruhiQ9C42\nwttAiFrOIv0H/yFXnTnYv8VIvh5DESBxrVCRZgw26uUxxO4f8gj8qfvw16Ab\npDI5\r\n=Vohg\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "homepage": "https://github.com/vuejs/vue-cli/tree/dev/packages/@vue/cli-plugin-pwa#readme",
  "keywords": [
    "vue",
    "cli",
    "pwa"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "akryum",
      "email": "guillaume.b.chau@gmail.com"
    },
    {
      "name": "soda",
      "email": "haoqunjiang+npm@gmail.com"
    },
    {
      "name": "yyx990803",
      "email": "yyx990803@gmail.com"
    }
  ],
  "name": "@vue/cli-plugin-pwa",
  "optionalDependencies": {},
  "publishConfig": {
    "access": "public"
  },
  "readme": "# @vue/cli-plugin-pwa\n\n> pwa plugin for vue-cli\n\nThe service worker added with this plugin is only enabled in the production environment (e.g. only if you run `npm run build` or `yarn build`). Enabling service worker in a development mode is not a recommended practice, because it can lead to the situation when previously cached assets are used and the latest local changes are not included.\n\nInstead, in the development mode the `noopServiceWorker.js` is included. This service worker file is effectively a 'no-op' that will reset any previous service worker registered for the same host:port combination.\n\nIf you need to test a service worker locally, build the application and run a simple HTTP-server from your build directory. It's recommended to use a browser incognito window to avoid complications with your browser cache.\n\n## Configuration\n\nConfiguration is handled via the `pwa` property of either the `vue.config.js`\nfile, or the `\"vue\"` field in `package.json`.\n\n- **pwa.workboxPluginMode**\n\n  This allows you to the choose between the two modes supported by the underlying\n  [`workbox-webpack-plugin`](https://developers.google.com/web/tools/workbox/modules/workbox-webpack-plugin).\n\n  - `'GenerateSW'` (default), will lead to a new service worker file being created\n  each time you rebuild your web app.\n\n  - `'InjectManifest'` allows you to start with an existing service worker file,\n  and creates a copy of that file with a \"precache manifest\" injected into it.\n\n  The \"[Which Plugin to Use?](https://developers.google.com/web/tools/workbox/modules/workbox-webpack-plugin#which_plugin_to_use)\"\n  guide can help you choose between the two modes.\n\n- **pwa.workboxOptions**\n\n  These options are passed on through to the underlying `workbox-webpack-plugin`.\n\n  For more information on what values are supported, please see the guide for\n  [`GenerateSW`](https://developers.google.com/web/tools/workbox/modules/workbox-webpack-plugin#full_generatesw_config)\n  or for [`InjectManifest`](https://developers.google.com/web/tools/workbox/modules/workbox-webpack-plugin#full_injectmanifest_config).\n\n- **pwa.name**\n\n  - Default: \"name\" field in `package.json`\n\n    Used as the value for the `apple-mobile-web-app-title` meta tag in the generated HTML. Note you will need to edit `public/manifest.json` to match this.\n\n- **pwa.themeColor**\n\n  - Default: `'#4DBA87'`\n\n- **pwa.msTileColor**\n\n  - Default: `'#000000'`\n\n- **pwa.appleMobileWebAppCapable**\n\n  - Default: `'no'`\n\n    This defaults to `'no'` because iOS before 11.3 does not have proper PWA support. See [this article](https://medium.com/@firt/dont-use-ios-web-app-meta-tag-irresponsibly-in-your-progressive-web-apps-85d70f4438cb) for more details.\n\n- **pwa.appleMobileWebAppStatusBarStyle**\n\n  - Default: `'default'`\n\n- **pwa.assetsVersion**\n\n  - Default: `''`\n\n    This option is used if you need to add a version to your icons and manifest, against browser’s cache. This will append `?v=<pwa.assetsVersion>` to the URLs of the icons and manifest.\n\n- **pwa.manifestPath**\n\n  - Default: `'manifest.json'`\n\n    The path of app’s manifest.\n\n- **pwa.iconPaths**\n\n  - Defaults:\n\n    ```js\n    {\n      favicon32: 'img/icons/favicon-32x32.png',\n      favicon16: 'img/icons/favicon-16x16.png',\n      appleTouchIcon: 'img/icons/apple-touch-icon-152x152.png',\n      maskIcon: 'img/icons/safari-pinned-tab.svg',\n      msTileImage: 'img/icons/msapplication-icon-144x144.png'\n    }\n    ```\n\n    Change these values to use different paths for your icons.\n\n### Example Configuration\n\n```js\n// Inside vue.config.js\nmodule.exports = {\n  // ...other vue-cli plugin options...\n  pwa: {\n    name: 'My App',\n    themeColor: '#4DBA87',\n    msTileColor: '#000000',\n    appleMobileWebAppCapable: 'yes',\n    appleMobileWebAppStatusBarStyle: 'black',\n\n    // configure the workbox plugin\n    workboxPluginMode: 'InjectManifest',\n    workboxOptions: {\n      // swSrc is required in InjectManifest mode.\n      swSrc: 'dev/sw.js',\n      // ...other Workbox options...\n    }\n  }\n}\n```\n\n## Installing in an Already Created Project\n\n``` sh\nvue add pwa\n```\n\n## Injected webpack-chain Rules\n\n- `config.plugin('workbox')`\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/vuejs/vue-cli.git",
    "directory": "packages/@vue/cli-plugin-pwa"
  },
  "version": "3.12.1"
}
