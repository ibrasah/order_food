{
  "_args": [
    [
      {
        "raw": "portfinder@^1.0.20",
        "scope": null,
        "escapedName": "portfinder",
        "name": "portfinder",
        "rawSpec": "^1.0.20",
        "spec": ">=1.0.20 <2.0.0",
        "type": "range"
      },
      "C:\\xampp\\htdocs\\vue_food\\node_modules\\@vue\\cli-service"
    ]
  ],
  "_from": "portfinder@^1.0.20",
  "_hasShrinkwrap": false,
  "_id": "portfinder@1.0.25",
  "_location": "/portfinder",
  "_nodeVersion": "12.8.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/portfinder_1.0.25_1571176501472_0.2935766816563923"
  },
  "_npmUser": {
    "name": "eriktrom",
    "email": "erik.trom.github@gmail.com"
  },
  "_npmVersion": "6.10.3",
  "_phantomChildren": {
    "ms": "2.1.2"
  },
  "_requested": {
    "raw": "portfinder@^1.0.20",
    "scope": null,
    "escapedName": "portfinder",
    "name": "portfinder",
    "rawSpec": "^1.0.20",
    "spec": ">=1.0.20 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@vue/cli-service",
    "/webpack-dev-server"
  ],
  "_resolved": "https://registry.npmjs.org/portfinder/-/portfinder-1.0.25.tgz",
  "_shasum": "254fd337ffba869f4b9d37edc298059cb4d35eca",
  "_shrinkwrap": null,
  "_spec": "portfinder@^1.0.20",
  "_where": "C:\\xampp\\htdocs\\vue_food\\node_modules\\@vue\\cli-service",
  "author": {
    "name": "Charlie Robbins",
    "email": "charlie.robbins@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/indexzero/node-portfinder/issues"
  },
  "dependencies": {
    "async": "^2.6.2",
    "debug": "^3.1.1",
    "mkdirp": "^0.5.1"
  },
  "description": "A simple tool to find an open port on the current machine",
  "devDependencies": {
    "glob": "^7.1.4",
    "vows": "^0.8.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-6ElJnHBbxVA1XSLgBp7G1FiCkQdlqGzuF7DswL5tcea+E8UpuvPU7beVAjjRwCioTS9ZluNbu+ZyRvgTsmqEBg==",
    "shasum": "254fd337ffba869f4b9d37edc298059cb4d35eca",
    "tarball": "https://registry.npmjs.org/portfinder/-/portfinder-1.0.25.tgz",
    "fileCount": 5,
    "unpackedSize": 19425,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdpkA2CRA9TVsSAnZWagAACmUP/107q/fcQoJZZfLiqF1k\nmlQXZzy6Qz1RrgJUoA/LxhrVh38C9P1yTMemwolvXgNQ87hvbj/Xj21X4P3k\ngYRZ2Ce3nNYwImMpFem4CNz3w/+rTRwJWCdTiVLV8iYeDdeKlGKjED0gg1K9\n2Xq1rKYNjZQlkL9r3ASAU6LTOe0T+gkvCPEM+vPHiQsDhBk9Xf0xSsO8MoSY\n9tw5qTV6BIMgLLmJWKOU8gTomLvQlEV5YU1mhdDQxAFsJuZbY9qpN7Vum0AV\ngunCfNFMJ8HUDO8W4O4Ko7wonGPveEu4KftrNBRkWTNCaEwR6GUyPfLBvjJr\nw5rSinFMwhMWoxZHIDBeHYZn0VKeF+SpTB/06/Dq+c2f+OP6IJJRfj4LDiyL\nVrZDmz2rGTs/4ccD0JcFyt9oKXKxJ01lfx2UgISEBC9GRPiPo9YL0d1GGgaw\nuAeqMZjw1TXkmfp+my/5GkZoojwsjkQcL4lPgATD6CmJhgqOegOAOfaOKjxG\nzMV0YFBpmJHdBP09n87jVxqKBwdX8D2sDteyZzCJjYtLWNuyPf4UNS9ZomHq\nlLmSG1lDEcZI8u6L0MTyHohkqgAe5sK1TM4go6K2OOO2ztYkXi1DLwMMhm7J\nSof1tnBoDB93ctZ5ZlRHkb6uyKdA8cr/GIw6v1r80RmEyoAV6QngU2Ng7Q94\ndXIh\r\n=Cyn4\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 0.12.0"
  },
  "files": [
    "lib"
  ],
  "gitHead": "e89425234f6794bad6ef0dea1e7d13b834fb3c01",
  "homepage": "https://github.com/indexzero/node-portfinder#readme",
  "keywords": [
    "http",
    "ports",
    "utilities"
  ],
  "license": "MIT",
  "main": "./lib/portfinder",
  "maintainers": [
    {
      "name": "eriktrom",
      "email": "erik.trom.github@gmail.com"
    },
    {
      "name": "indexzero",
      "email": "charlie.robbins@gmail.com"
    }
  ],
  "name": "portfinder",
  "optionalDependencies": {},
  "readme": "# node-portfinder [![Build Status](https://api.travis-ci.org/http-party/node-portfinder.svg)](https://travis-ci.org/http-party/node-portfinder)\n\n## Installation\n\n``` bash\n  $ [sudo] npm install portfinder\n```\n\n## Usage\nThe `portfinder` module has a simple interface:\n\n``` js\n  var portfinder = require('portfinder');\n\n  portfinder.getPort(function (err, port) {\n    //\n    // `port` is guaranteed to be a free port\n    // in this scope.\n    //\n  });\n```\n\nOr with promise (if Promise are supported) :\n\n``` js\n  const portfinder = require('portfinder');\n\n  portfinder.getPortPromise()\n    .then((port) => {\n        //\n        // `port` is guaranteed to be a free port\n        // in this scope.\n        //\n    })\n    .catch((err) => {\n        //\n        // Could not get a free port, `err` contains the reason.\n        //\n    });\n```\n\nIf `portfinder.getPortPromise()` is called on a Node version without Promise (<4), it will throw an Error unless [Bluebird](http://bluebirdjs.com/docs/getting-started.html) or any Promise pollyfill is used.\n\n### Ports search scope \n\nBy default `portfinder` will start searching from `8000` and scan until maximum port number (`65535`) is reached. \n\nYou can change this globally by setting:\n\n```js\nportfinder.basePort = 3000;    // default: 8000\nportfinder.highestPort = 3333; // default: 65535\n```\n\nor by passing optional options object on each invocation:\n\n```js\nportfinder.getPort({\n    port: 3000,    // minimum port\n    stopPort: 3333 // maximum port\n}, callback);\n```\n\n## Run Tests\n``` bash\n  $ npm test\n```\n\n#### Author: [Charlie Robbins][0]\n#### Maintainer: [Erik Trom][1]\n#### License: MIT/X11\n[0]: http://nodejitsu.com\n[1]: https://github.com/eriktrom\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/indexzero/node-portfinder.git"
  },
  "scripts": {
    "test": "vows test/*-test.js --spec"
  },
  "types": "./lib/portfinder.d.ts",
  "version": "1.0.25"
}
