{
  "_args": [
    [
      {
        "raw": "javascript-stringify@^1.6.0",
        "scope": null,
        "escapedName": "javascript-stringify",
        "name": "javascript-stringify",
        "rawSpec": "^1.6.0",
        "spec": ">=1.6.0 <2.0.0",
        "type": "range"
      },
      "C:\\xampp\\htdocs\\vue_food\\node_modules\\webpack-chain"
    ]
  ],
  "_from": "javascript-stringify@>=1.6.0 <2.0.0",
  "_id": "javascript-stringify@1.6.0",
  "_inCache": true,
  "_location": "/javascript-stringify",
  "_nodeVersion": "7.3.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/javascript-stringify-1.6.0.tgz_1487875783394_0.8793839318677783"
  },
  "_npmUser": {
    "name": "blakeembrey",
    "email": "hello@blakeembrey.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "javascript-stringify@^1.6.0",
    "scope": null,
    "escapedName": "javascript-stringify",
    "name": "javascript-stringify",
    "rawSpec": "^1.6.0",
    "spec": ">=1.6.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/webpack-chain"
  ],
  "_resolved": "https://registry.npmjs.org/javascript-stringify/-/javascript-stringify-1.6.0.tgz",
  "_shasum": "142d111f3a6e3dae8f4a9afd77d45855b5a9cce3",
  "_shrinkwrap": null,
  "_spec": "javascript-stringify@^1.6.0",
  "_where": "C:\\xampp\\htdocs\\vue_food\\node_modules\\webpack-chain",
  "author": {
    "name": "Blake Embrey",
    "email": "hello@blakeembrey.com",
    "url": "http://blakeembrey.me"
  },
  "bugs": {
    "url": "https://github.com/blakeembrey/javascript-stringify/issues"
  },
  "dependencies": {},
  "description": "Stringify is to `eval` as `JSON.stringify` is to `JSON.parse`",
  "devDependencies": {
    "chai": "^1.9.1",
    "istanbul": "^0.3.0",
    "mocha": "^1.21.3"
  },
  "directories": {},
  "dist": {
    "shasum": "142d111f3a6e3dae8f4a9afd77d45855b5a9cce3",
    "tarball": "https://registry.npmjs.org/javascript-stringify/-/javascript-stringify-1.6.0.tgz"
  },
  "files": [
    "javascript-stringify.js",
    "javascript-stringify.d.ts"
  ],
  "gitHead": "066f652f4b104f1d82167bd155122e9b74aa3b61",
  "homepage": "https://github.com/blakeembrey/javascript-stringify#readme",
  "keywords": [
    "stringify",
    "javascript",
    "object",
    "string"
  ],
  "license": "MIT",
  "main": "javascript-stringify.js",
  "maintainers": [
    {
      "name": "blakeembrey",
      "email": "hello@blakeembrey.com"
    }
  ],
  "name": "javascript-stringify",
  "optionalDependencies": {},
  "readme": "# JavaScript Stringify\n\n[![NPM version][npm-image]][npm-url]\n[![NPM downloads][downloads-image]][downloads-url]\n[![Build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n\n> Stringify is to `eval` as `JSON.stringify` is to `JSON.parse`.\n\n## Installation\n\n```javascript\nnpm install javascript-stringify --save\nbower install javascript-stringify --save\n```\n\n### Node\n\n```javascript\nvar javascriptStringify = require('javascript-stringify');\n```\n\n### AMD\n\n```javascript\ndefine(function (require, exports, module) {\n  var javascriptStringify = require('javascript-stringify');\n});\n```\n\n### `<script>` tag\n\n```html\n<script src=\"javascript-stringify.js\"></script>\n```\n\n## Usage\n\n```javascript\njavascriptStringify(value[, replacer [, space [, options]]])\n```\n\nThe API is similar to `JSON.stringify`. However, any value returned by the replacer will be used literally. For this reason, the replacer is passed three arguments - `value`, `indentation` and `stringify`. If you need to continue the stringification process inside your replacer, you can call `stringify(value)` with the new value.\n\nThe `options` object allows some additional configuration:\n\n* **maxDepth** _(number, default: 100)_ The maximum depth of values to stringify\n* **maxValues** _(number, default: 100000)_ The maximum number of values to stringify\n* **references** _(boolean, default: false)_ Restore circular/repeated references in the object (uses IIFE)\n* **skipUndefinedProperties** _(boolean, default: false)_ Omits `undefined` properties instead of restoring as `undefined`\n\n### Examples\n\n```javascript\njavascriptStringify({});    // \"{}\"\njavascriptStringify(true);  // \"true\"\njavascriptStringify('foo'); // \"'foo'\"\n\njavascriptStringify({ x: 5, y: 6});       // \"{x:5,y:6}\"\njavascriptStringify([1, 2, 3, 'string']); // \"[1,2,3,'string']\"\n\njavascriptStringify({ a: { b: { c: 1 } } }, null, null, { maxDepth: 2 }); // \"{a:{b:{}}}\"\n\n/**\n * Invalid key names are automatically stringified.\n */\n\njavascriptStringify({ 'some-key': 10 }); // \"{'some-key':10}\"\n\n/**\n * Some object types and values can remain identical.\n */\n\njavascriptStringify([/.+/ig, new Number(10), new Date()]); // \"[/.+/gi,new Number(10),new Date(1406623295732)]\"\n\n/**\n * Unknown or circular references are removed.\n */\n\nvar obj = { x: 10 };\nobj.circular = obj;\n\njavascriptStringify(obj); // \"{x:10}\"\njavascriptStringify(obj, null, null, { references: true }); // \"(function(){var x={x:10};x.circular=x;return x;}())\"\n\n/**\n * Specify indentation - just like `JSON.stringify`.\n */\n\njavascriptStringify({ a: 2 }, null, ' ');             // \"{\\n a: 2\\n}\"\njavascriptStringify({ uno: 1, dos : 2 }, null, '\\t'); // \"{\\n\\tuno: 1,\\n\\tdos: 2\\n}\"\n\n/**\n * Add custom replacer behaviour - like double quoted strings.\n */\n\njavascriptStringify(['test', 'string'], function (value, indent, stringify) {\n  if (typeof value === 'string') {\n    return '\"' + value.replace(/\"/g, '\\\\\"') + '\"';\n  }\n\n  return stringify(value);\n});\n//=> '[\"test\",\"string\"]'\n```\n\n## License\n\nMIT\n\n[npm-image]: https://img.shields.io/npm/v/javascript-stringify.svg?style=flat\n[npm-url]: https://npmjs.org/package/javascript-stringify\n[downloads-image]: https://img.shields.io/npm/dm/javascript-stringify.svg?style=flat\n[downloads-url]: https://npmjs.org/package/javascript-stringify\n[travis-image]: https://img.shields.io/travis/blakeembrey/javascript-stringify.svg?style=flat\n[travis-url]: https://travis-ci.org/blakeembrey/javascript-stringify\n[coveralls-image]: https://img.shields.io/coveralls/blakeembrey/javascript-stringify.svg?style=flat\n[coveralls-url]: https://coveralls.io/r/blakeembrey/javascript-stringify?branch=master\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/blakeembrey/javascript-stringify.git"
  },
  "scripts": {
    "test": "istanbul cover node_modules/mocha/bin/_mocha -- -R spec"
  },
  "typings": "javascript-stringify.d.ts",
  "version": "1.6.0"
}
