{
  "_args": [
    [
      {
        "raw": "vue2-transitions@^0.2.3",
        "scope": null,
        "escapedName": "vue2-transitions",
        "name": "vue2-transitions",
        "rawSpec": "^0.2.3",
        "spec": ">=0.2.3 <0.3.0",
        "type": "range"
      },
      "C:\\xampp\\htdocs\\vue_food"
    ]
  ],
  "_from": "vue2-transitions@>=0.2.3 <0.3.0",
  "_id": "vue2-transitions@0.2.3",
  "_inCache": true,
  "_location": "/vue2-transitions",
  "_nodeVersion": "8.1.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/vue2-transitions-0.2.3.tgz_1517919129075_0.2758559456560761"
  },
  "_npmUser": {
    "name": "cristij",
    "email": "joracristi@gmail.com"
  },
  "_npmVersion": "5.0.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "vue2-transitions@^0.2.3",
    "scope": null,
    "escapedName": "vue2-transitions",
    "name": "vue2-transitions",
    "rawSpec": "^0.2.3",
    "spec": ">=0.2.3 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/vue2-transitions/-/vue2-transitions-0.2.3.tgz",
  "_shasum": "69c9d75b1db05f231b80980c03459d68490ba27d",
  "_shrinkwrap": null,
  "_spec": "vue2-transitions@^0.2.3",
  "_where": "C:\\xampp\\htdocs\\vue_food",
  "author": {
    "name": "cristij",
    "email": "joracristi@gmail.com"
  },
  "babel": {
    "presets": [
      [
        "vue-app"
      ]
    ],
    "plugins": [
      "preval",
      [
        "component",
        [
          {
            "libraryName": "element-ui",
            "styleLibraryName": "theme-chalk"
          }
        ]
      ]
    ]
  },
  "bili": {
    "format": [
      "cjs",
      "es",
      "umd",
      "umd-min"
    ],
    "banner": true,
    "name": "vue2-transitions",
    "plugins": [
      "vue"
    ],
    "vue": {
      "css": true
    }
  },
  "bugs": {
    "url": "https://github.com/cristij/vue2-transitions/issues"
  },
  "dependencies": {},
  "description": "Reusable component transitions",
  "devDependencies": {
    "babel-plugin-component": "^1.0.0",
    "babel-plugin-preval": "^1.6.2",
    "bili": "^1.3.3",
    "element-ui": "^2.0.10",
    "lodash.kebabcase": "^4.1.1",
    "marked3": "^0.5.1",
    "poi": "^9.3.10",
    "prismjs": "^1.9.0",
    "rollup-plugin-vue": "^2.5.2",
    "sass-loader": "^6.0.6",
    "test-vue-app": "^1.0.0",
    "typeface-lato": "^0.0.44",
    "v-tippy": "^1.0.2",
    "vue": "^2.5.13",
    "vue-github-badge": "^1.0.1",
    "vue-test-utils": "^1.0.0-beta.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-Ou5x74AOQbM8JjZV8pIssFFqavvj53QzrEEUr5QnElUYb1ZizPwaUJo0ZqmLPqjwPae7ON4SG8U2cSTI4tHKLg==",
    "shasum": "69c9d75b1db05f231b80980c03459d68490ba27d",
    "tarball": "https://registry.npmjs.org/vue2-transitions/-/vue2-transitions-0.2.3.tgz"
  },
  "files": [
    "dist",
    "src"
  ],
  "gitHead": "ed32da7b3f997a81034b9073533aa978b0045dde",
  "homepage": "https://github.com/cristij/vue2-transitions#readme",
  "license": "MIT",
  "main": "dist/vue2-transitions.cjs.js",
  "maintainers": [
    {
      "name": "cristij",
      "email": "joracristi@gmail.com"
    }
  ],
  "module": "dist/vue2-transitions.m.js",
  "name": "vue2-transitions",
  "optionalDependencies": {},
  "poi": {
    "entry": "example/index.js",
    "dist": "example/dist",
    "homepage": "./",
    "html": {
      "template": "example/index.html"
    }
  },
  "readme": "# vue2-transitions\n\n## [Demo](https://cristijora.github.io/vue2-transitions)\n## [Codesandbox](https://codesandbox.io/s/v80qxp7nwy)\n\n[![NPM version](https://img.shields.io/npm/v/vue2-transitions.svg?style=flat)](https://npmjs.com/package/vue2-transitions) [![NPM downloads](https://img.shields.io/npm/dm/vue2-transitions.svg?style=flat)](https://npmjs.com/package/vue2-transitions) [![CircleCI](https://circleci.com/gh/cristij/vue2-transitions/tree/master.svg?style=shield)](https://circleci.com/gh/cristij/vue2-transitions/tree/master)\n\nâœ¨ Reusable component transitions\n\n## Why :question:\n - Brings only the code that you need. \n   *Many alternative solutions import the whole animate.css library. Vue2-transitions is minimalistic and lets\n   you import only the transitions that you need in your app*\n   \n   Each transition component has **~2kb** (non-minified js+css or **~400 bytes** gzipped) and you can import only the ones you really need.\n   \n - Configurable.\n   *You can configure animation enter and leave durations as well as all the props of the native Vue `transition` components through props*\n   \n - Easy to use.\n   *No extra classes*\n \n## Install :coffee:\n\n```bash\nnpm i vue2-transitions\nyarn add vue2-transitions\n```\n\nCDN: [UNPKG](https://unpkg.com/vue2-transitions/) | [jsDelivr](https://cdn.jsdelivr.net/npm/vue2-transitions/) (available as `window.Vue2Transitions`)\n\n## Usage :rocket:\n\n```vue\n<template>\n   <fade-transition>\n      <div class=\"box\" v-show=\"show\">\n        <p>Fade transition</p>\n      </div>\n    </fade-transition>\n</template>\n\n<script>\nimport {FadeTransition} from 'vue2-transitions'\n\nexport default {\n  components: {\n    FadeTransition\n  }\n}\n</script>\n```\n\n## Global usage\n```js\nimport Transitions from 'vue2-transitions'\nVue.use(Transitions)\n```\n\n## List of available transitions\n- FadeTransition\n- ZoomCenterTransition\n- ZoomXTransition\n- ZoomYTransition\n- ZoomUpTransition\n- CollapseTransition\n- ScaleTransition\n- SlideXLeftTransition\n- SlideXRightTransition\n- SlideXUpTransition\n- SlideXDownTransition\n\n## Props \n```js\nprops: {\n  /**\n   * Transition duration. Number for specifying the same duration for enter/leave transitions\n   * Object style {enter: 300, leave: 300} for specifying explicit durations for enter/leave\n   */\n  duration: {\n    type: [Number, Object],\n    default: 300\n  },  \n  /**\n   * Whether the component should be a `transition-group` component.\n   */\n  group: Boolean,\n  /**\n   * Transition tag, in case the component is a `transition-group`\n   */\n  tag: {\n    type: String,\n    default: 'span'\n  },\n  /**\n   *  Transform origin property https://tympanus.net/codrops/css_reference/transform-origin/.\n   *  Can be specified with styles as well but it's shorter with this prop\n   */\n  origin: {\n    type: String,\n    default: ''\n  },\n  /**\n   * Element styles that are applied during transition. These styles are applied on @beforeEnter and @beforeLeave hooks\n   */\n  styles: {\n    type: Object,\n    default: () => {\n      return {\n        animationFillMode: 'both',  \n        animationTimingFunction: 'ease-out'\n      }\n    }\n  }\n}\n```\n\n## Group transitions\nEach transition can be used as a `transition-group` by adding the `group` prop to one of the desired transitions.\n```html\n<fade-transition group>\n   <!--keyed children here-->\n</fade-transition>\n```\nGotchas/things to watch:\n1. Elements inside `group` transitions should have `display: inline-block` or must be placed in a flex context:\n[Vue.js docs reference](https://vuejs.org/v2/guide/transitions.html#List-Move-Transitions)\n2. Each transition has a `move` class [move class docs](https://vuejs.org/v2/guide/transitions.html#List-Move-Transitions).\nUnfortunately the duration for the move transition cannot be configured through props. By default each transition has a `move` class associated \nwith `.3s` transition duration:\n\n - Zoom \n   ```css\n    .zoom-move{\n      transition: transform .3s ease-out;\n    }\n   ```\n - Slide \n   ```css\n     .slide-move{\n       transition: transform .3s ease-out;\n     }\n   ```\n - Scale\n   ```css\n    .scale-move{\n        transition: transform .3s cubic-bezier(.25,.8,.50,1);\n      }\n   ``` \n - Fade\n   ```css\n   .fade-move{\n       transition: transform .3s ease-out;\n     }\n    ``` \nIf you want to configure the duration, just redefine the class for the transition you use with the desired duration.\n\n\n## Contribution\n\n### Defining a new transition\nThe codebase is fairly simple and contains mostly `.vue` components. If you want to add a new transition to the collection follow these steps:\n1. Fork the repo.\n2. Create a new branch.\n3. Create a new `.vue` file (together with a folder if necessary)\n4. Define the transition.\n   ```html\n    <template>\n      <component :is=\"componentType\"\n                  v-bind=\"$attrs\"\n                  v-on=\"hooks\"\n                  enter-active-class=\"enterAnimationClassHere\"\n                  move-class=\"move-class\"\n                  leave-active-class=\"leaveAnimationClassHere\">\n        <slot></slot>\n      </component>\n    </template>\n    <script>\n      import {baseTransition} from '../mixins/index.js'\n      export default {\n        name: 'transition-name-here',\n        mixins: [baseTransition]\n      }\n    </script>\n    <style>\n     // Your styles for animations here.\n    </style>\n   ```\n5. Import the transition in `src/index.js` and place it in the `export default` object.\n6. Add the name of the new transition (camelCase) in the `transitionOptions` array inside `example/App.vue`\n\nBesides the properties described above, you can pass in any other [Transition props or events](https://vuejs.org/v2/api/#transition)\n**Note** Overriding hooks (especially `beforeEnter` or `beforeLeave`) may cause unwanted effects.\n\n## License\n\nMIT &copy; [cristijora](https://github.com/cristijora)\n\n## Special thanks to\n\n@euvl (The UI for list transitions in the demo is inspired by [vue-js-grid demo](https://github.com/euvl/vue-js-grid) )  \n",
  "readmeFilename": "README.md",
  "repository": {
    "url": "git+https://github.com/cristij/vue2-transitions.git",
    "type": "git"
  },
  "scripts": {
    "build": "bili",
    "build:example": "poi build",
    "example": "poi",
    "prepublishOnly": "npm test && npm run build",
    "test": "test-vue-app"
  },
  "unpkg": "dist/vue-transitions",
  "version": "0.2.3"
}
