{
  "_args": [
    [
      {
        "raw": "vue-loader@^15.7.0",
        "scope": null,
        "escapedName": "vue-loader",
        "name": "vue-loader",
        "rawSpec": "^15.7.0",
        "spec": ">=15.7.0 <16.0.0",
        "type": "range"
      },
      "C:\\xampp\\htdocs\\vue_food\\node_modules\\@vue\\cli-service"
    ]
  ],
  "_from": "vue-loader@^15.7.0",
  "_hasShrinkwrap": false,
  "_id": "vue-loader@15.9.0",
  "_location": "/vue-loader",
  "_nodeVersion": "10.19.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/vue-loader_15.9.0_1581493702993_0.32650181855080174"
  },
  "_npmUser": {
    "name": "soda",
    "email": "haoqunjiang+npm@gmail.com"
  },
  "_npmVersion": "6.13.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "vue-loader@^15.7.0",
    "scope": null,
    "escapedName": "vue-loader",
    "name": "vue-loader",
    "rawSpec": "^15.7.0",
    "spec": ">=15.7.0 <16.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@vue/cli-service"
  ],
  "_resolved": "https://registry.npmjs.org/vue-loader/-/vue-loader-15.9.0.tgz",
  "_shasum": "5d4b0378a4606188fc83e587ed23c94bc3a10998",
  "_shrinkwrap": null,
  "_spec": "vue-loader@^15.7.0",
  "_where": "C:\\xampp\\htdocs\\vue_food\\node_modules\\@vue\\cli-service",
  "author": {
    "name": "Evan You"
  },
  "bugs": {
    "url": "https://github.com/vuejs/vue-loader/issues"
  },
  "dependencies": {
    "@vue/component-compiler-utils": "^3.1.0",
    "hash-sum": "^1.0.2",
    "loader-utils": "^1.1.0",
    "vue-hot-reload-api": "^2.3.0",
    "vue-style-loader": "^4.1.0"
  },
  "description": "Vue single-file component loader for Webpack",
  "devDependencies": {
    "@types/webpack": "^4.4.27",
    "babel-core": "^6.26.0",
    "babel-loader": "^7.1.4",
    "babel-preset-env": "^1.6.1",
    "cache-loader": "^2.0.1",
    "conventional-changelog-cli": "^1.3.22",
    "css-loader": "^1.0.0",
    "eslint": "^4.19.0",
    "eslint-plugin-vue-libs": "^2.1.0",
    "file-loader": "^1.1.11",
    "html-webpack-plugin": "^3.1.0",
    "javascript-stringify": "^1.6.0",
    "jest": "^23.5.0",
    "jsdom": "^11.6.2",
    "lint-staged": "^7.0.0",
    "markdown-loader": "^2.0.2",
    "memfs": "^3.0.3",
    "mini-css-extract-plugin": "^0.4.1",
    "node-sass": "^4.7.2",
    "normalize-newline": "^3.0.0",
    "null-loader": "^0.1.1",
    "postcss-loader": "^2.1.2",
    "pug": "^2.0.1",
    "pug-plain-loader": "^1.0.0",
    "raw-loader": "^0.5.1",
    "sass-loader": "^6.0.7",
    "source-map": "^0.5.0",
    "stylus": "^0.54.5",
    "stylus-loader": "^3.0.2",
    "sugarss": "^1.0.1",
    "ts-loader": "^4.2.0",
    "typescript": "^2.8.3",
    "url-loader": "^1.0.1",
    "vue": "^2.5.16",
    "vue-server-renderer": "^2.5.16",
    "vue-template-compiler": "^2.5.16",
    "vuepress": "^0.14.2",
    "vuepress-theme-vue": "^1.1.0",
    "webpack": "^4.1.0",
    "webpack-cli": "^3.2.0",
    "webpack-dev-server": "^3.1.1",
    "webpack-merge": "^4.1.2",
    "yorkie": "^1.0.3"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-FeDHvTSpwyLeF7LIV1PYkvqUQgTJ8UmOxhSlCyRSxaXCKk+M6NF4tDQsLsPPNeDPyR7TfRQ8MLg6v+8PsDV9xQ==",
    "shasum": "5d4b0378a4606188fc83e587ed23c94bc3a10998",
    "tarball": "https://registry.npmjs.org/vue-loader/-/vue-loader-15.9.0.tgz",
    "fileCount": 21,
    "unpackedSize": 68038,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeQ63HCRA9TVsSAnZWagAA1rAP/2zpKpXKdq+GZb4FtzPv\nSUPTyo9H5WBLp05K6jfEwFXC0KGeyzEv6XcivvjJcQb80vqta9V2gduKOdI8\npxFFYBgxwoC9pHiUxyc94EMPMoPUY8vJ4KunkQITqywgd86EBRmqYy3Y7Uda\nf7jLXh3igTgDrHVcAAK2iwJ6LghwuAOqp87w7hJiZHClo2loXqPEcV+pYejT\nvBaX51+KVMOCMgY1/b5oA7AejmZ7uYeuXknsgsJIbu2uRyPuwpUTuPW+M+N7\n0oHRnqDw61V7KYg1bL/ef4ISqY3Hvc3ioQG77/MUs+QUsSx3B4Wu3Ynrj5Js\nEPoSQa7N8L3lX2SLNGRRk1kFyAJALDUgKOB93jVBnj28xeOLypR4d1uPEg/L\n52RBxkbCuKIRG+F26myNe7T1Aei5YnkUZ/ZVHpw850sI49Lk/nixTZ7eI0qt\nHpkp6antkwKZG63vmpz1ODFMYRBjtxUYYdkFxr593m1yQTLj+vB6H3fX54AR\nzNVQtzy1CnheoSlCoBK4VLmL66fglA5yi3MT+c+d0+1Vy9ppLf8dH6J6uGT8\ndxQOiojRHnvHg2gGgeEhWfUl8GwGSMYvBQh5gBPa4N7oqFHyN2ohozTNeSpE\nNjepXSfl8ZY9WbjLqmpwdeHsk+Mv1f9o1jdSN6En+n3DDzbMsQohEEll6PpR\nND4p\r\n=ygZF\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "bfc609165b1f942fd527fb08d8c964b62e420cf4",
  "gitHooks": {
    "pre-commit": "lint-staged"
  },
  "homepage": "https://github.com/vuejs/vue-loader",
  "license": "MIT",
  "lint-staged": {
    "lib/**/*.js": [
      "eslint --fix",
      "git add"
    ],
    "test/**/*.js": [
      "eslint --fix",
      "git add"
    ]
  },
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "soda",
      "email": "haoqunjiang+npm@gmail.com"
    },
    {
      "name": "yyx990803",
      "email": "yyx990803@gmail.com"
    }
  ],
  "name": "vue-loader",
  "optionalDependencies": {},
  "peerDependencies": {
    "css-loader": "*",
    "webpack": "^3.0.0 || ^4.1.0 || ^5.0.0-0"
  },
  "peerDependenciesMeta": {
    "cache-loader": {
      "optional": true
    },
    "vue-template-compiler": {
      "optional": true
    }
  },
  "readme": "# vue-loader [![Build Status](https://circleci.com/gh/vuejs/vue-loader/tree/master.svg?style=shield)](https://circleci.com/gh/vuejs/vue-loader/tree/master) [![Windows Build status](https://ci.appveyor.com/api/projects/status/8cdonrkbg6m4k1tm/branch/master?svg=true)](https://ci.appveyor.com/project/yyx990803/vue-loader/branch/master)\n\n> webpack loader for Vue Single-File Components\n\n**NOTE:** The master branch now hosts the code for v15! Legacy code is now in the [v14 branch](https://github.com/vuejs/vue-loader/tree/v14).\n\n- [Documentation](https://vue-loader.vuejs.org)\n- [Migrating from v14](https://vue-loader.vuejs.org/migrating.html)\n\n## What is Vue Loader?\n\n`vue-loader` is a loader for [webpack](https://webpack.js.org/) that allows you to author Vue components in a format called [Single-File Components (SFCs)](./docs/spec.md):\n\n``` vue\n<template>\n  <div class=\"example\">{{ msg }}</div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      msg: 'Hello world!'\n    }\n  }\n}\n</script>\n\n<style>\n.example {\n  color: red;\n}\n</style>\n```\n\nThere are many cool features provided by `vue-loader`:\n\n- Allows using other webpack loaders for each part of a Vue component, for example Sass for `<style>` and Pug for `<template>`;\n- Allows custom blocks in a `.vue` file that can have custom loader chains applied to them;\n- Treat static assets referenced in `<style>` and `<template>` as module dependencies and handle them with webpack loaders;\n- Simulate scoped CSS for each component;\n- State-preserving hot-reloading during development.\n\nIn a nutshell, the combination of webpack and `vue-loader` gives you a modern, flexible and extremely powerful front-end workflow for authoring Vue.js applications.\n\n## How It Works\n\n> The following section is for maintainers and contributors who are interested in the internal implementation details of `vue-loader`, and is **not** required knowledge for end users.\n\n`vue-loader` is not a simple source transform loader. It handles each language blocks inside an SFC with its own dedicated loader chain (you can think of each block as a \"virtual module\"), and finally assembles the blocks together into the final module. Here's a brief overview of how the whole thing works:\n\n1. `vue-loader` parses the SFC source code into an *SFC Descriptor* using `@vue/component-compiler-utils`. It then generates an import for each language block so the actual returned module code looks like this:\n\n    ``` js\n    // code returned from the main loader for 'source.vue'\n\n    // import the <template> block\n    import render from 'source.vue?vue&type=template'\n    // import the <script> block\n    import script from 'source.vue?vue&type=script'\n    export * from 'source.vue?vue&type=script'\n    // import <style> blocks\n    import 'source.vue?vue&type=style&index=1'\n\n    script.render = render\n    export default script\n    ```\n\n    Notice how the code is importing `source.vue` itself, but with different request queries for each block.\n\n2. We want the content in `script` block to be treated like `.js` files (and if it's `<script lang=\"ts\">`, we want to to be treated like `.ts` files). Same for other language blocks. So we want webpack to apply any configured module rules that matches `.js` also to requests that look like `source.vue?vue&type=script`. This is what `VueLoaderPlugin` (`src/plugins.ts`) does: for each module rule in the webpack config, it creates a modified clone that targets corresponding Vue language block requests.\n\n    Suppose we have configured `babel-loader` for all `*.js` files. That rule will be cloned and applied to Vue SFC `<script>` blocks as well. Internally to webpack, a request like\n\n    ``` js\n    import script from 'source.vue?vue&type=script'\n    ```\n\n    Will expand to:\n\n    ``` js\n    import script from 'babel-loader!vue-loader!source.vue?vue&type=script'\n    ```\n\n    Notice the `vue-loader` is also matched because `vue-loader` are applied to `.vue` files.\n\n    Similarly, if you have configured `style-loader` + `css-loader` + `sass-loader` for `*.scss` files:\n\n    ``` html\n    <style scoped lang=\"scss\">\n    ```\n\n    Will be returned by `vue-loader` as:\n\n    ``` js\n    import 'source.vue?vue&type=style&index=1&scoped&lang=scss'\n    ```\n\n    And webpack will expand it to:\n\n    ``` js\n    import 'style-loader!css-loader!sass-loader!vue-loader!source.vue?vue&type=style&index=1&scoped&lang=scss'\n    ```\n\n3. When processing the expanded requests, the main `vue-loader` will get invoked again. This time though, the loader notices that the request has queries and is targeting a specific block only. So it selects (`src/select.ts`) the inner content of the target block and passes it on to the loaders matched after it.\n\n4. For the `<script>` block, this is pretty much it. For `<template>` and `<style>` blocks though, a few extra tasks need to be performed:\n\n    - We need to compile the template using the Vue template compiler;\n    - We need to post-process the CSS in `<style scoped>` blocks, **after** `css-loader` but **before** `style-loader`.\n\n    Technically, these are additional loaders (`src/templateLoader.ts` and `src/stylePostLoader.ts`) that need to be injected into the expanded loader chain. It would be very complicated if the end users have to configure this themselves, so `VueLoaderPlugin` also injects a global [Pitching Loader](https://webpack.js.org/api/loaders/#pitching-loader) (`src/pitcher.ts`) that intercepts Vue `<template>` and `<style>` requests and injects the necessary loaders. The final requests look like the following:\n\n    ``` js\n    // <template lang=\"pug\">\n    import 'vue-loader/template-loader!pug-loader!source.vue?vue&type=template'\n\n    // <style scoped lang=\"scss\">\n    import 'style-loader!vue-loader/style-post-loader!css-loader!sass-loader!vue-loader!source.vue?vue&type=style&index=1&scoped&lang=scss'\n    ```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/vuejs/vue-loader.git"
  },
  "scripts": {
    "build": "webpack --config example/webpack.config.js --hide-modules",
    "dev": "webpack-dev-server --config example/webpack.config.js --inline --hot",
    "docs": "vuepress dev docs",
    "docs:build": "vuepress build docs",
    "lint": "eslint lib test --fix",
    "prepublishOnly": "conventional-changelog -p angular -r 2 -i CHANGELOG.md -s",
    "test": "yarn lint && jest --env node"
  },
  "typings": "lib/index.d.ts",
  "version": "15.9.0"
}
