{"remainingRequest":"C:\\xampp\\htdocs\\vue_food\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\vue_food\\src\\components\\BaseRadio.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\vue_food\\src\\components\\BaseRadio.vue","mtime":1566074504000},{"path":"C:\\xampp\\htdocs\\vue_food\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581838883170},{"path":"C:\\xampp\\htdocs\\vue_food\\node_modules\\babel-loader\\lib\\index.js","mtime":1581838876815},{"path":"C:\\xampp\\htdocs\\vue_food\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581838883170},{"path":"C:\\xampp\\htdocs\\vue_food\\node_modules\\vue-loader\\lib\\index.js","mtime":1581838885255}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"base-radio\",\n  props: {\n    name: {\n      type: [String, Number],\n      description: \"Radio label\"\n    },\n    disabled: {\n      type: Boolean,\n      description: \"Whether radio is disabled\"\n    },\n    value: {\n      type: [String, Boolean],\n      description: \"Radio value\"\n    },\n    inline: {\n      type: Boolean,\n      description: \"Whether radio is inline\"\n    }\n  },\n  data() {\n    return {\n      cbId: \"\"\n    };\n  },\n  computed: {\n    model: {\n      get() {\n        return this.value;\n      },\n      set(value) {\n        this.$emit(\"input\", value);\n      }\n    },\n    inlineClass() {\n      if (this.inline) {\n        return `form-check-inline`;\n      }\n      return \"\";\n    }\n  },\n  created() {\n    this.cbId = Math.random()\n      .toString(16)\n      .slice(2);\n  }\n};\n",{"version":3,"sources":["BaseRadio.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BaseRadio.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"form-check form-check-radio\" :class=\"[inlineClass, {disabled: disabled}]\">\n    <label :for=\"cbId\" class=\"form-check-label\">\n      <input :id=\"cbId\"\n             class=\"form-check-input\"\n             type=\"radio\"\n             :disabled=\"disabled\"\n             :value=\"name\"\n             v-model=\"model\" />\n      <slot></slot>\n      <span class=\"form-check-sign\"></span>\n    </label>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"base-radio\",\n  props: {\n    name: {\n      type: [String, Number],\n      description: \"Radio label\"\n    },\n    disabled: {\n      type: Boolean,\n      description: \"Whether radio is disabled\"\n    },\n    value: {\n      type: [String, Boolean],\n      description: \"Radio value\"\n    },\n    inline: {\n      type: Boolean,\n      description: \"Whether radio is inline\"\n    }\n  },\n  data() {\n    return {\n      cbId: \"\"\n    };\n  },\n  computed: {\n    model: {\n      get() {\n        return this.value;\n      },\n      set(value) {\n        this.$emit(\"input\", value);\n      }\n    },\n    inlineClass() {\n      if (this.inline) {\n        return `form-check-inline`;\n      }\n      return \"\";\n    }\n  },\n  created() {\n    this.cbId = Math.random()\n      .toString(16)\n      .slice(2);\n  }\n};\n</script>\n"]}]}