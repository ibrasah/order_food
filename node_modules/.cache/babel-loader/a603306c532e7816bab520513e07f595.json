{"remainingRequest":"C:\\xampp\\htdocs\\vue_food\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\vue_food\\src\\directives\\click-ouside.js","dependencies":[{"path":"C:\\xampp\\htdocs\\vue_food\\src\\directives\\click-ouside.js","mtime":1566074504000},{"path":"C:\\xampp\\htdocs\\vue_food\\.babelrc","mtime":1566074504000},{"path":"C:\\xampp\\htdocs\\vue_food\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581838883170},{"path":"C:\\xampp\\htdocs\\vue_food\\node_modules\\babel-loader\\lib\\index.js","mtime":1581838876815}],"contextDependencies":[],"result":["export default {\n  bind: function bind(el, binding, vnode) {\n    el.clickOutsideEvent = function (event) {\n      // here I check that click was outside the el and his childrens\n      if (!(el == event.target || el.contains(event.target))) {\n        // and if it did, call method provided in attribute value\n        vnode.context[binding.expression](event);\n      }\n    };\n\n    document.body.addEventListener('click', el.clickOutsideEvent);\n  },\n  unbind: function unbind(el) {\n    document.body.removeEventListener('click', el.clickOutsideEvent);\n  }\n};",{"version":3,"sources":["C:/xampp/htdocs/vue_food/src/directives/click-ouside.js"],"names":["bind","el","binding","vnode","clickOutsideEvent","event","target","contains","context","expression","document","body","addEventListener","unbind","removeEventListener"],"mappings":"AAAA,eAAe;AACbA,EAAAA,IAAI,EAAE,cAAUC,EAAV,EAAcC,OAAd,EAAuBC,KAAvB,EAA8B;AAClCF,IAAAA,EAAE,CAACG,iBAAH,GAAuB,UAAUC,KAAV,EAAiB;AACtC;AACA,UAAI,EAAEJ,EAAE,IAAII,KAAK,CAACC,MAAZ,IAAsBL,EAAE,CAACM,QAAH,CAAYF,KAAK,CAACC,MAAlB,CAAxB,CAAJ,EAAwD;AACtD;AACAH,QAAAA,KAAK,CAACK,OAAN,CAAcN,OAAO,CAACO,UAAtB,EAAkCJ,KAAlC;AACD;AACF,KAND;;AAOAK,IAAAA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,OAA/B,EAAwCX,EAAE,CAACG,iBAA3C;AACD,GAVY;AAWbS,EAAAA,MAAM,EAAE,gBAAUZ,EAAV,EAAc;AACpBS,IAAAA,QAAQ,CAACC,IAAT,CAAcG,mBAAd,CAAkC,OAAlC,EAA2Cb,EAAE,CAACG,iBAA9C;AACD;AAbY,CAAf","sourcesContent":["export default {\n  bind: function (el, binding, vnode) {\n    el.clickOutsideEvent = function (event) {\n      // here I check that click was outside the el and his childrens\n      if (!(el == event.target || el.contains(event.target))) {\n        // and if it did, call method provided in attribute value\n        vnode.context[binding.expression](event);\n      }\n    };\n    document.body.addEventListener('click', el.clickOutsideEvent)\n  },\n  unbind: function (el) {\n    document.body.removeEventListener('click', el.clickOutsideEvent)\n  },\n}\n"]}]}