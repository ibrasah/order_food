{"remainingRequest":"C:\\xampp\\htdocs\\vue_food\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\vue_food\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\vue_food\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\vue_food\\src\\pages\\Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\vue_food\\src\\pages\\Dashboard.vue","mtime":1566074504000},{"path":"C:\\xampp\\htdocs\\vue_food\\.babelrc","mtime":1566074504000},{"path":"C:\\xampp\\htdocs\\vue_food\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581838883170},{"path":"C:\\xampp\\htdocs\\vue_food\\node_modules\\babel-loader\\lib\\index.js","mtime":1581838876815},{"path":"C:\\xampp\\htdocs\\vue_food\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581838883170},{"path":"C:\\xampp\\htdocs\\vue_food\\node_modules\\vue-loader\\lib\\index.js","mtime":1581838885255}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport LineChart from '@/components/Charts/LineChart';\nimport BarChart from '@/components/Charts/BarChart';\nimport * as chartConfigs from '@/components/Charts/config';\nimport TaskList from \"./Dashboard/TaskList\";\nimport UserTable from \"./Dashboard/UserTable\";\nimport config from '@/config';\nexport default {\n  components: {\n    LineChart: LineChart,\n    BarChart: BarChart,\n    TaskList: TaskList,\n    UserTable: UserTable\n  },\n  data: function data() {\n    return {\n      bigLineChart: {\n        allData: [[100, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110, 100], [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120], [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130]],\n        activeIndex: 0,\n        chartData: null,\n        extraOptions: chartConfigs.purpleChartOptions,\n        gradientColors: config.colors.primaryGradient,\n        gradientStops: [1, 0.4, 0],\n        categories: []\n      },\n      purpleLineChart: {\n        extraOptions: chartConfigs.purpleChartOptions,\n        chartData: {\n          labels: ['JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\n          datasets: [{\n            label: \"Data\",\n            fill: true,\n            borderColor: config.colors.primary,\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: config.colors.primary,\n            pointBorderColor: 'rgba(255,255,255,0)',\n            pointHoverBackgroundColor: config.colors.primary,\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 4,\n            data: [80, 100, 70, 80, 120, 80]\n          }]\n        },\n        gradientColors: config.colors.primaryGradient,\n        gradientStops: [1, 0.2, 0]\n      },\n      greenLineChart: {\n        extraOptions: chartConfigs.greenChartOptions,\n        chartData: {\n          labels: ['JUL', 'AUG', 'SEP', 'OCT', 'NOV'],\n          datasets: [{\n            label: \"My First dataset\",\n            fill: true,\n            borderColor: config.colors.danger,\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: config.colors.danger,\n            pointBorderColor: 'rgba(255,255,255,0)',\n            pointHoverBackgroundColor: config.colors.danger,\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 4,\n            data: [90, 27, 60, 12, 80]\n          }]\n        },\n        gradientColors: ['rgba(66,134,121,0.15)', 'rgba(66,134,121,0.0)', 'rgba(66,134,121,0)'],\n        gradientStops: [1, 0.4, 0]\n      },\n      blueBarChart: {\n        extraOptions: chartConfigs.barChartOptions,\n        chartData: {\n          labels: ['USA', 'GER', 'AUS', 'UK', 'RO', 'BR'],\n          datasets: [{\n            label: \"Countries\",\n            fill: true,\n            borderColor: config.colors.info,\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            data: [53, 20, 10, 80, 100, 45]\n          }]\n        },\n        gradientColors: config.colors.primaryGradient,\n        gradientStops: [1, 0.4, 0]\n      }\n    };\n  },\n  computed: {\n    enableRTL: function enableRTL() {\n      return this.$route.query.enableRTL;\n    },\n    isRTL: function isRTL() {\n      return this.$rtl.isRTL;\n    },\n    bigLineChartCategories: function bigLineChartCategories() {\n      return this.$t('dashboard.chartCategories');\n    }\n  },\n  methods: {\n    initBigChart: function initBigChart(index) {\n      var chartData = {\n        datasets: [{\n          fill: true,\n          borderColor: config.colors.primary,\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: config.colors.primary,\n          pointBorderColor: 'rgba(255,255,255,0)',\n          pointHoverBackgroundColor: config.colors.primary,\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: this.bigLineChart.allData[index]\n        }],\n        labels: ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']\n      };\n      this.$refs.bigChart.updateGradients(chartData);\n      this.bigLineChart.chartData = chartData;\n      this.bigLineChart.activeIndex = index;\n    }\n  },\n  mounted: function mounted() {\n    this.i18n = this.$i18n;\n\n    if (this.enableRTL) {\n      this.i18n.locale = 'ar';\n      this.$rtl.enableRTL();\n    }\n\n    this.initBigChart(0);\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.$rtl.isRTL) {\n      this.i18n.locale = 'en';\n      this.$rtl.disableRTL();\n    }\n  }\n};",{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <card type=\"chart\">\n          <template slot=\"header\">\n            <div class=\"row\">\n              <div class=\"col-sm-6\" :class=\"isRTL ? 'text-right' : 'text-left'\">\n                <h5 class=\"card-category\">{{$t('dashboard.totalShipments')}}</h5>\n                <h2 class=\"card-title\">{{$t('dashboard.performance')}}</h2>\n              </div>\n              <div class=\"col-sm-6\">\n                <div class=\"btn-group btn-group-toggle\"\n                     :class=\"isRTL ? 'float-left' : 'float-right'\"\n                     data-toggle=\"buttons\">\n                  <label v-for=\"(option, index) in bigLineChartCategories\"\n                         :key=\"option\"\n                         class=\"btn btn-sm btn-primary btn-simple\"\n                         :class=\"{active: bigLineChart.activeIndex === index}\"\n                         :id=\"index\">\n                    <input type=\"radio\"\n                           @click=\"initBigChart(index)\"\n                           name=\"options\" autocomplete=\"off\"\n                           :checked=\"bigLineChart.activeIndex === index\">\n                    {{option}}\n                  </label>\n                </div>\n              </div>\n            </div>\n          </template>\n          <div class=\"chart-area\">\n            <line-chart style=\"height: 100%\"\n                        ref=\"bigChart\"\n                        chart-id=\"big-line-chart\"\n                        :chart-data=\"bigLineChart.chartData\"\n                        :gradient-colors=\"bigLineChart.gradientColors\"\n                        :gradient-stops=\"bigLineChart.gradientStops\"\n                        :extra-options=\"bigLineChart.extraOptions\">\n            </line-chart>\n          </div>\n        </card>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-4\" :class=\"{'text-right': isRTL}\">\n        <card type=\"chart\">\n          <template slot=\"header\">\n            <h5 class=\"card-category\">{{$t('dashboard.totalShipments')}}</h5>\n            <h3 class=\"card-title\"><i class=\"tim-icons icon-bell-55 text-primary \"></i> 763,215</h3>\n          </template>\n          <div class=\"chart-area\">\n            <line-chart style=\"height: 100%\"\n                        chart-id=\"purple-line-chart\"\n                        :chart-data=\"purpleLineChart.chartData\"\n                        :gradient-colors=\"purpleLineChart.gradientColors\"\n                        :gradient-stops=\"purpleLineChart.gradientStops\"\n                        :extra-options=\"purpleLineChart.extraOptions\">\n            </line-chart>\n          </div>\n        </card>\n      </div>\n      <div class=\"col-lg-4\" :class=\"{'text-right': isRTL}\">\n        <card type=\"chart\">\n          <template slot=\"header\">\n            <h5 class=\"card-category\">{{$t('dashboard.dailySales')}}</h5>\n            <h3 class=\"card-title\"><i class=\"tim-icons icon-delivery-fast text-info \"></i> 3,500€</h3>\n          </template>\n          <div class=\"chart-area\">\n            <bar-chart style=\"height: 100%\"\n                       chart-id=\"blue-bar-chart\"\n                       :chart-data=\"blueBarChart.chartData\"\n                       :gradient-stops=\"blueBarChart.gradientStops\"\n                       :extra-options=\"blueBarChart.extraOptions\">\n            </bar-chart>\n          </div>\n        </card>\n      </div>\n      <div class=\"col-lg-4\" :class=\"{'text-right': isRTL}\">\n        <card type=\"chart\">\n          <template slot=\"header\">\n            <h5 class=\"card-category\">{{$t('dashboard.completedTasks')}}</h5>\n            <h3 class=\"card-title\"><i class=\"tim-icons icon-send text-success \"></i> 12,100K</h3>\n          </template>\n          <div class=\"chart-area\">\n            <line-chart style=\"height: 100%\"\n                        chart-id=\"green-line-chart\"\n                        :chart-data=\"greenLineChart.chartData\"\n                        :gradient-stops=\"greenLineChart.gradientStops\"\n                        :extra-options=\"greenLineChart.extraOptions\">\n            </line-chart>\n          </div>\n        </card>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-6 col-md-12\">\n        <card type=\"tasks\" :header-classes=\"{'text-right': isRTL}\">\n          <template slot=\"header\">\n            <h6 class=\"title d-inline\">{{$t('dashboard.tasks', {count: 5})}}</h6>\n            <p class=\"card-category d-inline\">{{$t('dashboard.today')}}</p>\n            <base-dropdown menu-on-right=\"\"\n                           tag=\"div\"\n                           title-classes=\"btn btn-link btn-icon\"\n                           aria-label=\"Settings menu\"\n                           :class=\"{'float-left': isRTL}\">\n              <i slot=\"title\" class=\"tim-icons icon-settings-gear-63\"></i>\n              <a class=\"dropdown-item\" href=\"#pablo\">{{$t('dashboard.dropdown.action')}}</a>\n              <a class=\"dropdown-item\" href=\"#pablo\">{{$t('dashboard.dropdown.anotherAction')}}</a>\n              <a class=\"dropdown-item\" href=\"#pablo\">{{$t('dashboard.dropdown.somethingElse')}}</a>\n            </base-dropdown>\n          </template>\n          <div class=\"table-full-width table-responsive\">\n            <task-list></task-list>\n          </div>\n        </card>\n      </div>\n      <div class=\"col-lg-6 col-md-12\">\n        <card class=\"card\" :header-classes=\"{'text-right': isRTL}\">\n          <h4 slot=\"header\" class=\"card-title\">{{$t('dashboard.simpleTable')}}</h4>\n          <div class=\"table-responsive\">\n            <user-table></user-table>\n          </div>\n        </card>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n  import LineChart from '@/components/Charts/LineChart';\n  import BarChart from '@/components/Charts/BarChart';\n  import * as chartConfigs from '@/components/Charts/config';\n  import TaskList from './Dashboard/TaskList';\n  import UserTable from './Dashboard/UserTable';\n  import config from '@/config';\n\n  export default {\n    components: {\n      LineChart,\n      BarChart,\n      TaskList,\n      UserTable\n    },\n    data() {\n      return {\n        bigLineChart: {\n          allData: [\n            [100, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110, 100],\n            [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120],\n            [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130]\n          ],\n          activeIndex: 0,\n          chartData: null,\n          extraOptions: chartConfigs.purpleChartOptions,\n          gradientColors: config.colors.primaryGradient,\n          gradientStops: [1, 0.4, 0],\n          categories: []\n        },\n        purpleLineChart: {\n          extraOptions: chartConfigs.purpleChartOptions,\n          chartData: {\n            labels: ['JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\n            datasets: [{\n              label: \"Data\",\n              fill: true,\n              borderColor: config.colors.primary,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: config.colors.primary,\n              pointBorderColor: 'rgba(255,255,255,0)',\n              pointHoverBackgroundColor: config.colors.primary,\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 4,\n              data: [80, 100, 70, 80, 120, 80],\n            }]\n          },\n          gradientColors: config.colors.primaryGradient,\n          gradientStops: [1, 0.2, 0],\n        },\n        greenLineChart: {\n          extraOptions: chartConfigs.greenChartOptions,\n          chartData: {\n            labels: ['JUL', 'AUG', 'SEP', 'OCT', 'NOV'],\n            datasets: [{\n              label: \"My First dataset\",\n              fill: true,\n              borderColor: config.colors.danger,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: config.colors.danger,\n              pointBorderColor: 'rgba(255,255,255,0)',\n              pointHoverBackgroundColor: config.colors.danger,\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 4,\n              data: [90, 27, 60, 12, 80],\n            }]\n          },\n          gradientColors: ['rgba(66,134,121,0.15)', 'rgba(66,134,121,0.0)', 'rgba(66,134,121,0)'],\n          gradientStops: [1, 0.4, 0],\n        },\n        blueBarChart: {\n          extraOptions: chartConfigs.barChartOptions,\n          chartData: {\n            labels: ['USA', 'GER', 'AUS', 'UK', 'RO', 'BR'],\n            datasets: [{\n              label: \"Countries\",\n              fill: true,\n              borderColor: config.colors.info,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              data: [53, 20, 10, 80, 100, 45],\n            }]\n          },\n          gradientColors: config.colors.primaryGradient,\n          gradientStops: [1, 0.4, 0],\n        }\n      }\n    },\n    computed: {\n      enableRTL() {\n        return this.$route.query.enableRTL;\n      },\n      isRTL() {\n        return this.$rtl.isRTL;\n      },\n      bigLineChartCategories() {\n        return this.$t('dashboard.chartCategories');\n      }\n    },\n    methods: {\n      initBigChart(index) {\n        let chartData = {\n          datasets: [{\n            fill: true,\n            borderColor: config.colors.primary,\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: config.colors.primary,\n            pointBorderColor: 'rgba(255,255,255,0)',\n            pointHoverBackgroundColor: config.colors.primary,\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 4,\n            data: this.bigLineChart.allData[index]\n          }],\n          labels: ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\n        }\n        this.$refs.bigChart.updateGradients(chartData);\n        this.bigLineChart.chartData = chartData;\n        this.bigLineChart.activeIndex = index;\n      }\n    },\n    mounted() {\n      this.i18n = this.$i18n;\n      if (this.enableRTL) {\n        this.i18n.locale = 'ar';\n        this.$rtl.enableRTL();\n      }\n      this.initBigChart(0);\n    },\n    beforeDestroy() {\n      if (this.$rtl.isRTL) {\n        this.i18n.locale = 'en';\n        this.$rtl.disableRTL();\n      }\n    }\n  };\n</script>\n<style>\n</style>\n"],"sourceRoot":"src/pages"}]}